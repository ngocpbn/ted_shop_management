<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="guna2Elipse1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Suy/MgAAAABJRU5ErkJggg==
</value>
  </data>
</root>